(defmacro condm (&body condition-parts)
	(labels1 (group-cond-statements (list)
			(recursive (acc cur rest) (nil nil list)
				(bind-head-tail first rest rest
					(if (not rest)
						(nreverse acc)
						(if (not cur)
							(recur acc (list first) rest)
							(recur (cons (cons first (car cur)) acc) nil rest))))))
		`(cond ,@(group-cond-statements condition-parts))))
